{"ast":null,"code":"import React from\"react\";import\"./PixelGrid.css\";import{jsx as _jsx}from\"react/jsx-runtime\";const PixelGrid=_ref=>{let{grid,updateColor}=_ref;return/*#__PURE__*/_jsx(\"div\",{className:\"grid\",children:grid.map(cell=>/*#__PURE__*/_jsx(\"div\",{className:\"gridItem\",style:{backgroundColor:cell.color,gridColumnStart:cell.x+1,gridRowStart:cell.y+1},onClick:()=>updateColor(cell.x,cell.y)},\"\".concat(cell.x,\"-\").concat(cell.y)))});};export default PixelGrid;","map":{"version":3,"names":["React","jsx","_jsx","PixelGrid","_ref","grid","updateColor","className","children","map","cell","style","backgroundColor","color","gridColumnStart","x","gridRowStart","y","onClick","concat"],"sources":["S:/Coding/Deploy2/Pixel-Grid/client/src/PixelGrid.jsx"],"sourcesContent":["import React from \"react\";\r\nimport \"./PixelGrid.css\";\r\n\r\nconst PixelGrid = ({ grid, updateColor }) => {\r\n  return (\r\n    <div className=\"grid\">\r\n      {grid.map((cell) => (\r\n        <div\r\n          key={`${cell.x}-${cell.y}`}\r\n          className=\"gridItem\"\r\n          style={{\r\n            backgroundColor: cell.color,\r\n            gridColumnStart: cell.x + 1,\r\n            gridRowStart: cell.y + 1,\r\n          }}\r\n          onClick={() => updateColor(cell.x, cell.y)}\r\n        ></div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PixelGrid;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,iBAAiB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEzB,KAAM,CAAAC,SAAS,CAAGC,IAAA,EAA2B,IAA1B,CAAEC,IAAI,CAAEC,WAAY,CAAC,CAAAF,IAAA,CACtC,mBACEF,IAAA,QAAKK,SAAS,CAAC,MAAM,CAAAC,QAAA,CAClBH,IAAI,CAACI,GAAG,CAAEC,IAAI,eACbR,IAAA,QAEEK,SAAS,CAAC,UAAU,CACpBI,KAAK,CAAE,CACLC,eAAe,CAAEF,IAAI,CAACG,KAAK,CAC3BC,eAAe,CAAEJ,IAAI,CAACK,CAAC,CAAG,CAAC,CAC3BC,YAAY,CAAEN,IAAI,CAACO,CAAC,CAAG,CACzB,CAAE,CACFC,OAAO,CAAEA,CAAA,GAAMZ,WAAW,CAACI,IAAI,CAACK,CAAC,CAAEL,IAAI,CAACO,CAAC,CAAE,KAAAE,MAAA,CAPnCT,IAAI,CAACK,CAAC,MAAAI,MAAA,CAAIT,IAAI,CAACO,CAAC,CAQpB,CACP,CAAC,CACC,CAAC,CAEV,CAAC,CAED,cAAe,CAAAd,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}